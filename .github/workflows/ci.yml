name: CI

on:
  push:
  pull_request:
  schedule: [cron: "0 0 * * *"]
  workflow_dispatch:
    inputs:
      include_rate_limiting:
        type: boolean
        description: Run rate-limit test


permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  API_KEY: ${{ secrets.wk_api_key }}

jobs:
  rate_limiting:
    needs: [test]
    name: Test rate limiting
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && github.event.inputs.include_rate_limiting)
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - run: cargo test --no-default-features --features client,default-tls test_rate_limiting -- --ignored
        env:
          RUST_LOG: info

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - run: cargo test
      - run: cargo test --no-default-features --features model

  build:
    name: Rust ${{matrix.rust}} [${{matrix.runner}}]
    runs-on: ${{matrix.runner}}
    strategy:
      fail-fast: false
      matrix:
        rust: ["1.63", stable]
        runner: [ubuntu-latest, windows-latest]
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
      - run: cargo build --no-default-features --features model
      - run: cargo build

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - run: cargo clippy

  # outdated:
  #   name: Outdated
  #   runs-on: ubuntu-latest
  #   if: github.event_name != 'pull_request'
  #   timeout-minutes: 45
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: dtolnay/install@cargo-outdated
  #     - run: cargo outdated --workspace --exit-code 1
